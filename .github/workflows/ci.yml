name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        emacs_version: [29.1, 30.1]

    steps:
      - name: Setup Emacs
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Install Eldev
        uses: emacs-eldev/setup-eldev@v1

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ripgrep
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y ripgrep
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install ripgrep
          fi

      - name: Run tests
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" && "${{ matrix.emacs_version }}" == "30.1" ]]; then
            eldev --verbose test --undercover=on,coveralls
          else
            eldev --verbose test --undercover=off
          fi

  melpazoid:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Melpazoid
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install emacs && emacs --version
        git clone https://github.com/riscy/melpazoid.git ~/melpazoid
        pip install ~/melpazoid
    - name: Run Melpazoid
      env:
        LOCAL_REPO: ${{ github.workspace }}
        # RECIPE is your recipe as written for MELPA:
        RECIPE: (greger :fetcher github :repo "andreasjansson/greger.el")
        # set this to false (or remove it) if the package isn't on MELPA:
        EXIST_OK: false
      run: echo $GITHUB_REF && make -C ~/melpazoid

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Emacs
        uses: purcell/setup-emacs@master
        with:
          version: '30.1'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check formatting
        run: ./script/format --check

      

#!/usr/bin/env emacs --script

;;; format --- Format all *.el files recursively -*- lexical-binding: t -*-

;; Format script to indent all *.el files recursively
;; Usage: ./script/format

;;; Code:

(defun format-elisp-file (file)
  "Format a single Elisp FILE by indenting it properly."
  (message "Formatting: %s" file)
  (condition-case err
      (with-temp-buffer
        (insert-file-contents file)
        (emacs-lisp-mode)
        (indent-region (point-min) (point-max))
        (write-region (point-min) (point-max) file))
    (error
     (message "Error formatting %s: %s" file (error-message-string err))
     nil)))

(defun find-elisp-files (directory)
  "Find all *.el files in DIRECTORY recursively."
  (let ((files '()))
    (dolist (file (directory-files-recursively directory "\\.el$"))
      (push file files))
    (nreverse files)))

(defun format-all-elisp-files ()
  "Format all *.el files in the current directory recursively."
  (message "Formatting all *.el files...")
  (let ((files (find-elisp-files "."))
        (formatted-count 0)
        (error-count 0))
    (dolist (file files)
      (if (format-elisp-file file)
          (setq formatted-count (1+ formatted-count))
        (setq error-count (1+ error-count))))
    (message "âœ“ Formatting complete! Formatted: %d, Errors: %d" 
             formatted-count error-count)))

;; Run the formatter
(format-all-elisp-files)

;;; format ends here

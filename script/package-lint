#!/bin/bash

# Package-lint script for greger package
# Runs package-lint on all relevant Emacs Lisp files

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Find package-lint
PACKAGE_LINT_PATH="$HOME/.emacs.d/elpa/package-lint-20240507.1722"
if [ ! -d "$PACKAGE_LINT_PATH" ]; then
    echo -e "${RED}Error: package-lint not found at $PACKAGE_LINT_PATH${NC}"
    echo "Please install package-lint or update the path in this script"
    exit 1
fi

# Files to lint (exclude test files and debug files)
FILES_TO_LINT=(
    "greger.el"
    "greger-agent.el"
    "greger-parser.el"
    "greger-stream.el"
    "greger-tools.el"
    "greger-stdlib.el"
    "greger-lib-lsp.el"
    "greger-providers.el"
    "greger-provider-claude.el"
    "greger-provider-openai.el"
    "greger-provider-google.el"
    "greger-web.el"
)

echo -e "${YELLOW}Running package-lint on greger package...${NC}"
echo

TOTAL_ERRORS=0
TOTAL_WARNINGS=0

for file in "${FILES_TO_LINT[@]}"; do
    if [ ! -f "$file" ]; then
        echo -e "${YELLOW}Warning: $file not found, skipping${NC}"
        continue
    fi

    echo -e "Linting ${YELLOW}$file${NC}..."

    # Run package-lint on the file
    result=$(emacs --batch -Q \
        --eval "(progn
                  (setq debug-on-error t)
                  (package-initialize)
                  (add-to-list 'load-path \"$PACKAGE_LINT_PATH\")
                  (add-to-list 'load-path \".\")
                  (require 'package-lint)
                  (find-file \"$file\")
                  (let ((results (package-lint-buffer)))
                    (if results
                        (progn
                          (princ (format \"ISSUES_FOUND_IN_$file:\\n\"))
                          (dolist (result results)
                            (let ((line (nth 0 result))
                                  (col (nth 1 result))
                                  (type (nth 2 result))
                                  (msg (nth 3 result)))
                              (princ (format \"%s:%d:%d: %s: %s\\n\" \"$file\" line col type msg))))
                          (kill-emacs 1))
                        (progn
                          (princ \"NO_ISSUES_FOUND\\n\")
                          (kill-emacs 0)))))" 2>&1)

    exit_code=$?

    if [ $exit_code -eq 0 ]; then
        echo -e "  ${GREEN}✓ No issues found${NC}"
    else
        echo -e "  ${RED}✗ Issues found:${NC}"
        # Parse and display the issues
        echo "$result" | grep "^$file:" | while read line; do
            if [[ $line == *": error:"* ]]; then
                echo -e "    ${RED}$line${NC}"
                ((TOTAL_ERRORS++)) || true
            elif [[ $line == *": warning:"* ]]; then
                echo -e "    ${YELLOW}$line${NC}"
                ((TOTAL_WARNINGS++)) || true
            fi
        done
    fi
    echo
done

echo -e "${YELLOW}Package-lint complete!${NC}"

if [ $TOTAL_ERRORS -gt 0 ] || [ $TOTAL_WARNINGS -gt 0 ]; then
    echo -e "Summary: ${RED}$TOTAL_ERRORS errors${NC}, ${YELLOW}$TOTAL_WARNINGS warnings${NC}"
    exit 1
else
    echo -e "${GREEN}No issues found in any files!${NC}"
    exit 0
fi

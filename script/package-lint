#!/bin/bash

# Package-lint script for greger package
# Runs package-lint on all relevant Emacs Lisp files

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Files to lint (exclude test files and debug files)
FILES_TO_LINT=(
    "greger.el"
    "greger-agent.el"
    "greger-parser.el"
    "greger-client.el"
    "greger-tools.el"
    "greger-stdlib.el"
    "greger-lib-lsp.el"
    "greger-web.el"
)

echo -e "${YELLOW}Running package-lint on greger package...${NC}"
echo

OVERALL_EXIT_CODE=0

for file in "${FILES_TO_LINT[@]}"; do
    if [ ! -f "$file" ]; then
        echo -e "${YELLOW}Warning: $file not found, skipping${NC}"
        continue
    fi

    echo -e "Linting ${YELLOW}$file${NC}..."

    # Run package-lint on the file
    if emacs --batch -Q \
        --eval "(progn
                  (setq debug-on-error t)
                  (add-to-list 'load-path \".\")
                  ;; Setup package archives and install dependencies if needed
                  (require 'package)
                  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
                                           (\"gnu\" . \"https://elpa.gnu.org/packages/\")))
                  (package-initialize)
                  ;; Install package-lint if not available
                  (unless (package-installed-p 'package-lint)
                    (package-refresh-contents)
                    (package-install 'package-lint))
                  ;; Load package-lint
                  (require 'package-lint)
                  (find-file \"$file\")
                  (let ((results (package-lint-buffer)))
                    (if results
                        (progn
                          (dolist (result results)
                            (let ((line (nth 0 result))
                                  (col (nth 1 result))
                                  (type (nth 2 result))
                                  (msg (nth 3 result)))
                              (princ (format \"%s:%d:%d: %s: %s\\n\" \"$file\" line col type msg))))
                          (kill-emacs 1))
                        (kill-emacs 0))))" 2>/dev/null; then
        echo -e "  ${GREEN}✓ No issues found${NC}"
    else
        echo -e "  ${RED}✗ Issues found${NC}"
        OVERALL_EXIT_CODE=1
        # Re-run to show the actual issues
        emacs --batch -Q \
            --eval "(progn
                      (setq debug-on-error t)
                      (add-to-list 'load-path \".\")
                      ;; Setup package archives and install dependencies if needed
                      (require 'package)
                      (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")
                                               (\"gnu\" . \"https://elpa.gnu.org/packages/\")))
                      (package-initialize)
                      ;; Install package-lint if not available
                      (unless (package-installed-p 'package-lint)
                        (package-refresh-contents)
                        (package-install 'package-lint))
                      ;; Load package-lint
                      (require 'package-lint)
                      (find-file \"$file\")
                      (let ((results (package-lint-buffer)))
                        (dolist (result results)
                          (let ((line (nth 0 result))
                                (col (nth 1 result))
                                (type (nth 2 result))
                                (msg (nth 3 result)))
                            (princ (format \"    %s:%d:%d: %s: %s\\n\" \"$file\" line col type msg))))))" 2>/dev/null
    fi
    echo
done

echo -e "${YELLOW}Package-lint complete!${NC}"

if [ $OVERALL_EXIT_CODE -eq 0 ]; then
    echo -e "${GREEN}No issues found in any files!${NC}"
else
    echo -e "${RED}Some files have issues that need to be fixed.${NC}"
fi

exit $OVERALL_EXIT_CODE

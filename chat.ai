## SYSTEM:

You can run arbitrary shell commands with the shell-command tool, but the following are safe shell commands that will run without user confirmation:

* `bash script/package-lint`
* `bash script/test --verbose`
* `bash script/test --verbose --file test/test-greger.el`
* `bash script/test --verbose --file test/test-greger-lib-lsp.el`


<safe-shell-commands>
bash script/package-lint
bash script/test --verbose
bash script/test --verbose --file test/test-greger.el
bash script/test --verbose --file test/test-greger-lib-lsp.el
</safe-shell-commands>


## USER:

Here are docs for the setup-emacs github action: https://github.com/marketplace/actions/set-up-emacs

And example usage: https://raw.githubusercontent.com/company-mode/company-mode/1924eabfa7438974da0500e85fff5fb32c27282c/.github/workflows/ci.yml

Make a github action that runs ./script/test on main and PR pushes

## ASSISTANT:

I'll help you create a GitHub Action that runs `./script/test` on main and PR pushes. Let me first examine the documentation and example you provided, then create the workflow file.

## TOOL USE:

Name: read-webpage
ID: toolu_01Cnx1Ecs794qdFk2HPjyj3E

### url

<tool.toolu_01Cnx1Ecs794qdFk2HPjyj3E>
https://github.com/marketplace/actions/set-up-emacs
</tool.toolu_01Cnx1Ecs794qdFk2HPjyj3E>

## TOOL RESULT:

ID: toolu_01Cnx1Ecs794qdFk2HPjyj3E

<tool.toolu_01Cnx1Ecs794qdFk2HPjyj3E>
    Skip to content
    Navigation Menu
   Toggle navigation




            Sign in
               Appearance settings




        Product

            GitHub Copilot


        Write better code with AI



            GitHub Models

                New


        Manage and compare prompts



            GitHub Advanced Security


        Find and fix vulnerabilities



            Actions


        Automate any workflow



            Codespaces


        Instant dev environments






            Issues


        Plan and track work



            Code Review


        Manage code changes



            Discussions


        Collaborate outside of code



            Code Search


        Find more, search less





    Explore
      Why GitHub




      All features




      Documentation



      GitHub Skills



      Blog








        Solutions
              By company size
      Enterprises




      Small and medium teams




      Startups




      Nonprofits





   By use case
      DevSecOps




      DevOps




      CI/CD




      View all use cases






    By industry
      Healthcare




      Financial services




      Manufacturing




      Government




      View all industries







              View all solutions




        Resources
              Topics
      AI




      DevOps




      Security




      Software Development




      View all






    Explore
      Learning Pathways



      Events & Webinars



      Ebooks & Whitepapers




      Customer Stories




      Partners



      Executive Insights









        Open Source

            GitHub Sponsors


        Fund open source developers





            The ReadME Project


        GitHub community articles




   Repositories
      Topics




      Trending




      Collections









        Enterprise

            Enterprise platform


        AI-powered developer platform




   Available add-ons
            GitHub Advanced Security


        Enterprise-grade security features



            Copilot for business


        Enterprise-grade AI features



            Premium Support


        Enterprise-grade 24/7 support







   Pricing


  Search or jump to...
     Search code, repositories, users, issues, pull requests...
      '"`   </textarea></xmp>
        Search




  Clear





    Search syntax tips








        Provide feedback





    '"`   </textarea></xmp>   We read every piece of feedback, and take your input very seriously.
    Include my email address so I can be contacted
       Cancel
      Submit feedback


        Saved searches

  Use saved searches to filter your results more quickly





    '"`   </textarea></xmp>
    Name
   Query

            To see all available qualifiers, see our  documentation .





       Cancel
      Create saved search



                Sign in


                Sign up
                   Appearance settings

  Resetting focus



    You signed in with another tab or window.  Reload  to refresh your session.  You signed out in another tab or window.  Reload  to refresh your session.  You switched accounts on another tab or window.  Reload  to refresh your session.    Dismiss alert


         {{ message }}




     Marketplace
 Actions
 Set up Emacs




 Set up Emacs
 Actions

 Install a specific Emacs version for use in your workflow
  v6.0
 Latest


 By  purcell



  Star 148 ¬†(  148  ) You must be signed in to star a repository Use   latest version
  Choose a version


 Tags
 2 ¬†(  2  )
 continuous-integration testing







  A Github Action that installs a specific emacs version

  Uses  nix-emacs-ci  to provide binaries for a number of different Emacs versions.
  Since that project uses Nix, Nix will be installed automatically if
necessary.
  Note also that only Linux and MacOS are supported, since Nix is not
available on Windows.
  Check out  examples of using this Action in the wild in 1500+ repositories .
  See the  actions tab  for runs of this action! üöÄ
  Usage:

  uses :  purcell/setup-emacs@master  with :
   version :  24.5

  The  emacs  executable on the path will then be the requested
version. For a list of available versions, please see the
 nix-emacs-ci  project.
  For an example of real-life usage, see the  Actions config for  package-lint .

 Note about compiling binary emacs modules

  Here's an example  of a project which compiles binary modules against an Emacs installed with this method.
  üíù Support this project and my other Open Source work via Patreon
  üíº LinkedIn profile
  ‚úç sanityinc.com


 Contributors 4 ¬†(  4  )



 Resources

    Open an issue 3 ¬†(  3  )
   Pull requests 0 ¬†(  0  )
   View source code
   Report abuse


 Set up Emacs  is not certified by GitHub. It is provided by a third-party and is governed by separate terms of service, privacy policy, and support documentation.






 About

 Install a specific Emacs version for use in your workflow
  v6.0
 Latest


 By  purcell


 Tags
 2 ¬†(  2  )
 continuous-integration testing

 Contributors 4 ¬†(  4  )



 Resources

    Open an issue 3 ¬†(  3  )
   Pull requests 0 ¬†(  0  )
   View source code
   Report abuse


 Set up Emacs  is not certified by GitHub. It is provided by a third-party and is governed by separate terms of service, privacy policy, and support documentation.













    You can‚Äôt perform that action at this time.









</tool.toolu_01Cnx1Ecs794qdFk2HPjyj3E>

## TOOL USE:

Name: read-webpage
ID: toolu_01PiHe8oKRb9VQURNH95GbT7

### url

<tool.toolu_01PiHe8oKRb9VQURNH95GbT7>
https://raw.githubusercontent.com/company-mode/company-mode/1924eabfa7438974da0500e85fff5fb32c27282c/.github/workflows/ci.yml
</tool.toolu_01PiHe8oKRb9VQURNH95GbT7>

### extract_text

<tool.toolu_01PiHe8oKRb9VQURNH95GbT7>
:json-false
</tool.toolu_01PiHe8oKRb9VQURNH95GbT7>

## TOOL RESULT:

ID: toolu_01PiHe8oKRb9VQURNH95GbT7

<tool.toolu_01PiHe8oKRb9VQURNH95GbT7>
name: CI

on:
  push:
    paths:
      - '**.el'
      - '**ci.yml'
      - 'Makefile'
    branches:
      - master

  pull_request:
    paths:
      - '**.el'
      - '**ci.yml'
      - 'Makefile'
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emacs_version: [26.1, 26.3, 27.2, 28.2, 29.4, 30.1, snapshot]

    steps:
      - name: Setup Emacs
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Checkout Company
        uses: actions/checkout@v3

      - name: Run tests
        run: make test-batch

      - name: Run compilation
        run: make compile-warn


</tool.toolu_01PiHe8oKRb9VQURNH95GbT7>

## ASSISTANT:

Now let me check the current directory structure to see if there's already a `.github/workflows` directory:

## TOOL USE:

Name: list-directory
ID: toolu_012bRcjjvstyo32fxZweFubt

### path

<tool.toolu_012bRcjjvstyo32fxZweFubt>
.
</tool.toolu_012bRcjjvstyo32fxZweFubt>

## TOOL RESULT:

ID: toolu_012bRcjjvstyo32fxZweFubt

<tool.toolu_012bRcjjvstyo32fxZweFubt>
README.md
chat.ai
greger-client.el
greger-lib-lsp.el
greger-parser.el
greger-pkg.el
greger-stdlib.el
greger-tools.el
greger-web.el
greger.el
recipes/
script/
test/
</tool.toolu_012bRcjjvstyo32fxZweFubt>

## TOOL USE:

Name: list-directory
ID: toolu_01RbhxeFAciSpeQTYJLz7Pwe

### path

<tool.toolu_01RbhxeFAciSpeQTYJLz7Pwe>
script
</tool.toolu_01RbhxeFAciSpeQTYJLz7Pwe>

## TOOL RESULT:

ID: toolu_01RbhxeFAciSpeQTYJLz7Pwe

<tool.toolu_01RbhxeFAciSpeQTYJLz7Pwe>
package-lint
test
</tool.toolu_01RbhxeFAciSpeQTYJLz7Pwe>

## ASSISTANT:

Let me also check if there's a `.github` directory:

## TOOL USE:

Name: list-directory
ID: toolu_01RHVmWTCH2HngDuddzGiHZr

### path

<tool.toolu_01RHVmWTCH2HngDuddzGiHZr>
.
</tool.toolu_01RHVmWTCH2HngDuddzGiHZr>

### show-hidden

<tool.toolu_01RHVmWTCH2HngDuddzGiHZr>
true
</tool.toolu_01RHVmWTCH2HngDuddzGiHZr>

## TOOL RESULT:

ID: toolu_01RHVmWTCH2HngDuddzGiHZr

<tool.toolu_01RHVmWTCH2HngDuddzGiHZr>
README.md
chat.ai
greger-client.el
greger-lib-lsp.el
greger-parser.el
greger-pkg.el
greger-stdlib.el
greger-tools.el
greger-web.el
greger.el
recipes/
script/
test/
</tool.toolu_01RHVmWTCH2HngDuddzGiHZr>

## ASSISTANT:

Now I'll create the GitHub Action workflow. Based on the documentation and example, I'll create a CI workflow that:
1. Runs on pushes to main and pull requests
2. Uses the setup-emacs action
3. Tests against multiple Emacs versions
4. Runs the `./script/test` command



## TOOL USE:

Name: make-directory
ID: toolu_011AkxgjjZGpYitCZsUdvFGh

### path

<tool.toolu_011AkxgjjZGpYitCZsUdvFGh>
.github/workflows
</tool.toolu_011AkxgjjZGpYitCZsUdvFGh>

### git_commit_message

<tool.toolu_011AkxgjjZGpYitCZsUdvFGh>
Create .github/workflows directory for CI setup
</tool.toolu_011AkxgjjZGpYitCZsUdvFGh>

## TOOL RESULT:

ID: toolu_011AkxgjjZGpYitCZsUdvFGh

<tool.toolu_011AkxgjjZGpYitCZsUdvFGh>
Directory already exists: /Users/andreas/projects/greger.el/.github/workflows
</tool.toolu_011AkxgjjZGpYitCZsUdvFGh>

## ASSISTANT:

It looks like the directory already exists. Let me check what's in it:

## TOOL USE:

Name: list-directory
ID: toolu_01BKogef8TVGhd22s29QjKE6

### path

<tool.toolu_01BKogef8TVGhd22s29QjKE6>
.github/workflows
</tool.toolu_01BKogef8TVGhd22s29QjKE6>

## TOOL RESULT:

ID: toolu_01BKogef8TVGhd22s29QjKE6

<tool.toolu_01BKogef8TVGhd22s29QjKE6>
Directory is empty
</tool.toolu_01BKogef8TVGhd22s29QjKE6>

## ASSISTANT:

Perfect! Now I'll create the CI workflow file:

## TOOL USE:

Name: write-new-file
ID: toolu_01MQVAZvUBQADUBYBRB3xYXx

### file_path

<tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>
.github/workflows/ci.yml
</tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>

### contents

<tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emacs_version: [26.1, 27.2, 28.2, 29.4, snapshot]

    steps:
      - name: Setup Emacs
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs_version }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: ./script/test
</tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>

### git_commit_message

<tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>
Add GitHub Actions CI workflow to run tests on main and PR pushes
</tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>

## TOOL RESULT:

ID: toolu_01MQVAZvUBQADUBYBRB3xYXx

<tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>
Successfully wrote new file /Users/andreas/projects/greger.el/.github/workflows/ci.yml with 518 characters. Successfully staged 2 file(s) and committed with message: Add GitHub Actions CI workflow to run tests on main and PR pushes
</tool.toolu_01MQVAZvUBQADUBYBRB3xYXx>


## ASSISTANT:

Perfect! I've created a GitHub Actions CI workflow that:

## Key Features:

1. **Triggers**: Runs on pushes to the `main` branch and on pull requests targeting `main`
2. **Multiple Emacs Versions**: Tests against Emacs versions 26.1, 27.2, 28.2, 29.4, and snapshot (latest development version)
3. **Setup**: Uses the `purcell/setup-emacs@master` action to install the specified Emacs version
4. **Test Execution**: Runs your `./script/test` command
5. **Fail-fast disabled**: If one Emacs version fails, the others will still run

## The workflow will:

- Run automatically when you push to main
- Run automatically when someone creates or updates a pull request targeting main
- Test your code against multiple Emacs versions to ensure compatibility
- Use the latest version of the checkout action (v4) for better performance and security

The workflow is now saved as `.github/workflows/ci.yml` and will be active once you push this to your repository. The action will appear in the "Actions" tab of your GitHub repository and provide detailed logs for each test run.

## USER:

greger.el requires emacs 28.1, so only test on supported versions. Both test on mac and linux

## ASSISTANT:

I'll update the GitHub Actions workflow to only test on Emacs versions 28.1 and above, and run tests on both macOS and Linux as requested.

## TOOL USE:

Name: str-replace
ID: toolu_01NBriswtQxGtE6yG4uL6UvW

### file_path

<tool.toolu_01NBriswtQxGtE6yG4uL6UvW>
.github/workflows/ci.yml
</tool.toolu_01NBriswtQxGtE6yG4uL6UvW>

### original_content

<tool.toolu_01NBriswtQxGtE6yG4uL6UvW>
jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emacs_version: [26.1, 27.2, 28.2, 29.4, snapshot]
</tool.toolu_01NBriswtQxGtE6yG4uL6UvW>

### new_content

<tool.toolu_01NBriswtQxGtE6yG4uL6UvW>
jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        emacs_version: [28.1, 28.2, 29.1, 29.4, snapshot]
</tool.toolu_01NBriswtQxGtE6yG4uL6UvW>

### git_commit_message

<tool.toolu_01NBriswtQxGtE6yG4uL6UvW>
Update CI to test only on Emacs 28.1+ and run on both Linux and macOS
</tool.toolu_01NBriswtQxGtE6yG4uL6UvW>

## TOOL RESULT:

ID: toolu_01NBriswtQxGtE6yG4uL6UvW

<tool.toolu_01NBriswtQxGtE6yG4uL6UvW>
Successfully replaced content in /Users/andreas/projects/greger.el/.github/workflows/ci.yml. Successfully staged 2 file(s) and committed with message: Update CI to test only on Emacs 28.1+ and run on both Linux and macOS
</tool.toolu_01NBriswtQxGtE6yG4uL6UvW>


## ASSISTANT:

Perfect! I've updated the GitHub Actions workflow with the following changes:

## Updated Features:

1. **Emacs Version Support**: Now only tests on Emacs versions that meet your requirement (28.1+):
   - 28.1 (minimum required version)
   - 28.2
   - 29.1
   - 29.4
   - snapshot (latest development version)

2. **Multi-platform Testing**: Tests run on both:
   - `ubuntu-latest` (Linux)
   - `macos-latest` (macOS)

3. **Matrix Strategy**: This creates a total of 10 test jobs (5 Emacs versions √ó 2 operating systems), ensuring your package works correctly across different platforms and supported Emacs versions.

The workflow will now:
- Only test on Emacs versions that your package actually supports
- Verify compatibility on both major platforms where Emacs is commonly used
- Provide better coverage for your users who might be on different operating systems
- Still fail gracefully (one failing combination won't stop the others from running)

This gives you comprehensive testing while being efficient by only testing on relevant Emacs versions.

## USER:

Don't test on so many versions, 28.1 and 29.4 are enough

## ASSISTANT:

I'll update the workflow to only test on Emacs 28.1 and 29.4 as requested.

## TOOL USE:

Name: str-replace
ID: toolu_013BsF7RGt7XTfRef47wt6kS

### file_path

<tool.toolu_013BsF7RGt7XTfRef47wt6kS>
.github/workflows/ci.yml
</tool.toolu_013BsF7RGt7XTfRef47wt6kS>

### original_content

<tool.toolu_013BsF7RGt7XTfRef47wt6kS>
        emacs_version: [28.1, 28.2, 29.1, 29.4, snapshot]
</tool.toolu_013BsF7RGt7XTfRef47wt6kS>

### new_content

<tool.toolu_013BsF7RGt7XTfRef47wt6kS>
        emacs_version: [28.1, 29.4]
</tool.toolu_013BsF7RGt7XTfRef47wt6kS>

### git_commit_message

<tool.toolu_013BsF7RGt7XTfRef47wt6kS>
Simplify CI to test only on Emacs 28.1 and 29.4
</tool.toolu_013BsF7RGt7XTfRef47wt6kS>

<!-- TOOL_RESULT_PLACEHOLDER_toolu_013BsF7RGt7XTfRef47wt6kS -->
